
# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
name: Java CI with Maven
on:
    push:
    #paths:
     # - "MicroserviceConfigServer/**"  
     branches: [ master ]
     
 # pull_request:
   # branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      
      - name: Set Release version
        id: vars
        run: |
            echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV    ##The branch or tag ref that triggered the workflow. For example, refs/heads/feature-branch-1. If neither a branch or tag is available for the event type, the variable will not exist.
            echo "git_hash=$(git rev-parse --short "$GITHUB_SHA")"   
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
        
      - name: Build with Maven
        run: |
               echo "A initial message"
               cd MicroserviceConfigServer
               mvn -B package --file pom.xml
               cd target
               ls -l
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{secrets.AWS_REGION}}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: push to ECR using Maven:JIB
        run: |
                echo "Build and push to ECR"
                cd MicroserviceConfigServer
                mvn compile jib:build
        
     # - name: Build docker image and push to ECR
     #   run: |
     #         echo "Software versions... "
     #         docker --version
     #         aws --version
     #         docker build -t ${{secrets.ECR_REPO_NAME}}/microservice_config_server:${{env.git_hash}} ./MicroserviceConfigServer
     #         docker push ${{secrets.ECR_REPO_NAME}}/microservice_config_server:${{env.git_hash}}
        env:
            AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
            AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
            AWS_REGION: ${{secrets.AWS_REGION}}
        
      - name: Check tag version
        run: |
            echo $RELEASE_VERSION
            echo ${{env.RELEASE_VERSION}}
            echo "AWS_ACCESS_KEY_ID= ${{secrets.AWS_ACCESS_KEY_ID}}"  >> $GITHUB_ENV
            echo "AWS_SECRET_ACCESS_KEY= ${{secrets.AWS_SECRET_ACCESS_KEY}}" >> $GITHUB_ENV
